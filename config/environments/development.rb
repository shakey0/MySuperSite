require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # In the development environment your application's code is reloaded any time
  # it changes. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable caching. By default caching is disabled.
  # Run rails dev:cache to toggle caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true

    config.cache_store = :memory_store
    config.public_file_server.headers = { "Cache-Control" => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false

    config.cache_store = :null_store
  end

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Disable caching for Action Mailer templates even if Action Controller
  # caching is enabled.
  config.action_mailer.perform_caching = false

  config.action_mailer.default_url_options = { host: "localhost", port: 3000 }

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Suppress logger output for asset requests.
  config.assets.quiet = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!

  # config.action_mailer.delivery_method = :smtp

  # config.action_mailer.smtp_settings = {
  #   address: 'smtp.gmail.com',        # Gmail's SMTP server
  #   port: 587,                        # Port for STARTTLS
  #   domain: 'shakey0.co.uk',          # Your domain (e.g., example.com)
  #   user_name: ENV['GMAIL_USERNAME'], # Your Gmail address
  #   password: ENV['GMAIL_APP_PASSWORD'], # App password for Gmail
  #   authentication: 'plain',          # Authentication type
  #   enable_starttls_auto: true        # Enables STARTTLS
  # }

  # # Optional: Set the default 'from' address for emails
  # config.action_mailer.default_options = {
  #   from: ENV['GMAIL_USERNAME']
  # }

  # # Use this to preview email links in logs during development (optional)
  # config.action_mailer.default_url_options = { host: 'localhost', port: 5100 }

  # config.action_mailer.perform_deliveries = false   # Actually send emails in development
  # config.action_mailer.raise_delivery_errors = true # Raise errors if something goes wrong

  config.action_mailer.delivery_method = :letter_opener
  config.action_mailer.perform_deliveries = true
end
